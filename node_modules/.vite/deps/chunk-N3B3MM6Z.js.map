{
  "version": 3,
  "sources": ["../../.pnpm/svelte@5.0.0-next.164/node_modules/svelte/src/internal/client/dom/hydration.js", "../../.pnpm/svelte@5.0.0-next.164/node_modules/svelte/src/internal/client/dev/equality.js", "../../.pnpm/svelte@5.0.0-next.164/node_modules/svelte/src/internal/client/dom/operations.js", "../../.pnpm/svelte@5.0.0-next.164/node_modules/svelte/src/internal/client/dom/elements/events.js", "../../.pnpm/svelte@5.0.0-next.164/node_modules/svelte/src/internal/client/dom/blocks/svelte-head.js", "../../.pnpm/svelte@5.0.0-next.164/node_modules/svelte/src/internal/client/render.js", "../../.pnpm/svelte@5.0.0-next.164/node_modules/svelte/src/legacy/legacy-client.js"],
  "sourcesContent": ["import { DEV } from 'esm-env';\nimport { HYDRATION_END, HYDRATION_START, HYDRATION_ERROR } from '../../../constants.js';\nimport * as w from '../warnings.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * Array of nodes to traverse for hydration. This will be null if we're not hydrating, but for\n * the sake of simplicity we're not going to use `null` checks everywhere and instead rely on\n * the `hydrating` flag to tell whether or not we're in hydration mode at which point this is set.\n * @type {import('#client').TemplateNode[]}\n */\nexport let hydrate_nodes = /** @type {any} */ (null);\n\n/** @type {import('#client').TemplateNode} */\nexport let hydrate_start;\n\n/** @param {import('#client').TemplateNode[]} nodes */\nexport function set_hydrate_nodes(nodes) {\n\thydrate_nodes = nodes;\n\thydrate_start = nodes && nodes[0];\n}\n\n/**\n * This function is only called when `hydrating` is true. If passed a `<!--[-->` opening\n * hydration marker, it finds the corresponding closing marker and sets `hydrate_nodes`\n * to everything between the markers, before returning the closing marker.\n * @param {Node} node\n * @returns {Node}\n */\nexport function hydrate_anchor(node) {\n\tif (node.nodeType !== 8) {\n\t\treturn node;\n\t}\n\n\tvar current = /** @type {Node | null} */ (node);\n\n\t// TODO this could have false positives, if a user comment consisted of `[`. need to tighten that up\n\tif (/** @type {Comment} */ (current).data !== HYDRATION_START) {\n\t\treturn node;\n\t}\n\n\t/** @type {Node[]} */\n\tvar nodes = [];\n\tvar depth = 0;\n\n\twhile ((current = /** @type {Node} */ (current).nextSibling) !== null) {\n\t\tif (current.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (current).data;\n\n\t\t\tif (data === HYDRATION_START) {\n\t\t\t\tdepth += 1;\n\t\t\t} else if (data[0] === HYDRATION_END) {\n\t\t\t\tif (depth === 0) {\n\t\t\t\t\thydrate_nodes = /** @type {import('#client').TemplateNode[]} */ (nodes);\n\t\t\t\t\thydrate_start = /** @type {import('#client').TemplateNode} */ (nodes[0]);\n\t\t\t\t\treturn current;\n\t\t\t\t}\n\n\t\t\t\tdepth -= 1;\n\t\t\t}\n\t\t}\n\n\t\tnodes.push(current);\n\t}\n\n\tlet location;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\tconst loc = node.parentNode?.__svelte_meta?.loc;\n\t\tif (loc) {\n\t\t\tlocation = `${loc.file}:${loc.line}:${loc.column}`;\n\t\t}\n\t}\n\n\tw.hydration_mismatch(location);\n\tthrow HYDRATION_ERROR;\n}\n", "import * as w from '../warnings.js';\nimport { get_proxied_value } from '../proxy.js';\n\nexport function init_array_prototype_warnings() {\n\tconst array_prototype = Array.prototype;\n\t// The REPL ends up here over and over, and this prevents it from adding more and more patches\n\t// of the same kind to the prototype, which would slow down everything over time.\n\t// @ts-expect-error\n\tconst cleanup = Array.__svelte_cleanup;\n\tif (cleanup) {\n\t\tcleanup();\n\t}\n\n\tconst { indexOf, lastIndexOf, includes } = array_prototype;\n\n\tarray_prototype.indexOf = function (item, from_index) {\n\t\tconst index = indexOf.call(this, item, from_index);\n\n\t\tif (index === -1) {\n\t\t\tconst test = indexOf.call(get_proxied_value(this), get_proxied_value(item), from_index);\n\n\t\t\tif (test !== -1) {\n\t\t\t\tw.state_proxy_equality_mismatch('array.indexOf(...)');\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.lastIndexOf = function (item, from_index) {\n\t\t// we need to specify this.length - 1 because it's probably using something like\n\t\t// `arguments` inside so passing undefined is different from not passing anything\n\t\tconst index = lastIndexOf.call(this, item, from_index ?? this.length - 1);\n\n\t\tif (index === -1) {\n\t\t\t// we need to specify this.length - 1 because it's probably using something like\n\t\t\t// `arguments` inside so passing undefined is different from not passing anything\n\t\t\tconst test = lastIndexOf.call(\n\t\t\t\tget_proxied_value(this),\n\t\t\t\tget_proxied_value(item),\n\t\t\t\tfrom_index ?? this.length - 1\n\t\t\t);\n\n\t\t\tif (test !== -1) {\n\t\t\t\tw.state_proxy_equality_mismatch('array.lastIndexOf(...)');\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.includes = function (item, from_index) {\n\t\tconst has = includes.call(this, item, from_index);\n\n\t\tif (!has) {\n\t\t\tconst test = includes.call(get_proxied_value(this), get_proxied_value(item), from_index);\n\n\t\t\tif (test) {\n\t\t\t\tw.state_proxy_equality_mismatch('array.includes(...)');\n\t\t\t}\n\t\t}\n\n\t\treturn has;\n\t};\n\n\t// @ts-expect-error\n\tArray.__svelte_cleanup = () => {\n\t\tarray_prototype.indexOf = indexOf;\n\t\tarray_prototype.lastIndexOf = lastIndexOf;\n\t\tarray_prototype.includes = includes;\n\t};\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function strict_equals(a, b, equal = true) {\n\tif ((a === b) !== (get_proxied_value(a) === get_proxied_value(b))) {\n\t\tw.state_proxy_equality_mismatch(equal ? '===' : '!==');\n\t}\n\n\treturn (a === b) === equal;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function equals(a, b, equal = true) {\n\tif ((a == b) !== (get_proxied_value(a) == get_proxied_value(b))) {\n\t\tw.state_proxy_equality_mismatch(equal ? '==' : '!=');\n\t}\n\n\treturn (a == b) === equal;\n}\n", "import { hydrate_anchor, hydrate_start, hydrating } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { current_effect } from '../runtime.js';\nimport { HYDRATION_ANCHOR } from '../../../constants.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/** @returns {Text} */\nexport function empty() {\n\treturn document.createTextNode('');\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function child(node) {\n\tconst child = node.firstChild;\n\tif (!hydrating) return child;\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\treturn node.appendChild(empty());\n\t}\n\n\treturn hydrate_anchor(child);\n}\n\n/**\n * @param {DocumentFragment | import('#client').TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\treturn /** @type {DocumentFragment} */ (fragment).firstChild;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_start?.nodeType !== 3) {\n\t\tvar text = empty();\n\t\tvar dom = /** @type {import('#client').TemplateNode[]} */ (\n\t\t\t/** @type {import('#client').Effect} */ (current_effect).dom\n\t\t);\n\n\t\tdom.unshift(text);\n\t\thydrate_start?.before(text);\n\n\t\treturn text;\n\t}\n\n\treturn hydrate_anchor(hydrate_start);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function sibling(node, is_text = false) {\n\tvar next_sibling = /** @type {import('#client').TemplateNode} */ (node.nextSibling);\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling.nodeType;\n\n\tif (type === 8 && /** @type {Comment} */ (next_sibling).data === HYDRATION_ANCHOR) {\n\t\treturn sibling(next_sibling, is_text);\n\t}\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = empty();\n\t\tvar dom = /** @type {import('#client').TemplateNode[]} */ (\n\t\t\t/** @type {import('#client').Effect} */ (current_effect).dom\n\t\t);\n\n\t\tdom.unshift(text);\n\t\tnext_sibling?.before(text);\n\n\t\treturn text;\n\t}\n\n\treturn hydrate_anchor(/** @type {Node} */ (next_sibling));\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n\n/** @param {string} name */\n/*#__NO_SIDE_EFFECTS__*/\nexport function create_element(name) {\n\treturn document.createElement(name);\n}\n", "import { teardown } from '../../reactivity/effects.js';\nimport { all_registered_events, root_event_handles } from '../../render.js';\nimport { define_property, is_array } from '../../utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} options\n */\nexport function create_event(event_name, dom, handler, options) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn handler.call(this, event);\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events.\n\tif (event_name.startsWith('pointer') || event_name === 'wheel') {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @template {HTMLElement} Element\n * @template {keyof HTMLElementEventMap} Type\n * @overload\n * @param {Element} element\n * @param {Type} type\n * @param {(this: Element, event: HTMLElementEventMap[Type]) => any} handler\n * @param {AddEventListenerOptions} [options]\n * @returns {() => void}\n */\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @overload\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n * @returns {() => void}\n */\n\n/**\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} handler\n * @param {boolean} capture\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @param {EventTarget} handler_element\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(handler_element, event) {\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.parentNode || /** @type {any} */ (current_target).host || null;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-expect-error is used above\n\t\tcurrent_target = handler_element;\n\t}\n}\n", "import { hydrate_anchor, hydrate_nodes, hydrating, set_hydrate_nodes } from '../hydration.js';\nimport { empty } from '../operations.js';\nimport { block } from '../../reactivity/effects.js';\nimport { HYDRATION_END, HYDRATION_START } from '../../../../constants.js';\n\n/**\n * @type {Node | undefined}\n */\nlet head_anchor;\n\nexport function reset_head_anchor() {\n\thead_anchor = undefined;\n}\n\n/**\n * @param {(anchor: Node) => import('#client').Dom | void} render_fn\n * @returns {void}\n */\nexport function head(render_fn) {\n\t// The head function may be called after the first hydration pass and ssr comment nodes may still be present,\n\t// therefore we need to skip that when we detect that we're not in hydration mode.\n\tlet previous_hydrate_nodes = null;\n\tlet was_hydrating = hydrating;\n\n\t/** @type {Comment | Text} */\n\tvar anchor;\n\n\tif (hydrating) {\n\t\tprevious_hydrate_nodes = hydrate_nodes;\n\n\t\t// There might be multiple head blocks in our app, so we need to account for each one needing independent hydration.\n\t\tif (head_anchor === undefined) {\n\t\t\thead_anchor = /** @type {import('#client').TemplateNode} */ (document.head.firstChild);\n\t\t}\n\n\t\twhile (\n\t\t\thead_anchor.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (head_anchor).data !== HYDRATION_START\n\t\t) {\n\t\t\thead_anchor = /** @type {import('#client').TemplateNode} */ (head_anchor.nextSibling);\n\t\t}\n\n\t\thead_anchor = /** @type {import('#client').TemplateNode} */ (hydrate_anchor(head_anchor));\n\t\thead_anchor = /** @type {import('#client').TemplateNode} */ (head_anchor.nextSibling);\n\t} else {\n\t\tanchor = document.head.appendChild(empty());\n\t}\n\n\ttry {\n\t\tblock(() => render_fn(anchor));\n\t} finally {\n\t\tif (was_hydrating) {\n\t\t\tset_hydrate_nodes(/** @type {import('#client').TemplateNode[]} */ (previous_hydrate_nodes));\n\t\t}\n\t}\n}\n", "import { DEV } from 'esm-env';\nimport { clear_text_content, create_element, empty, init_operations } from './dom/operations.js';\nimport { HYDRATION_ERROR, HYDRATION_START, PassiveDelegatedEvents } from '../../constants.js';\nimport { flush_sync, push, pop, current_component_context } from './runtime.js';\nimport { effect_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_anchor,\n\thydrate_nodes,\n\thydrating,\n\tset_hydrate_nodes,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from './utils.js';\nimport { handle_event_propagation } from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { validate_component } from '../shared/validate.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration and mounting (unless `options.intro` is `true`)\n * and when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// @ts-expect-error\n\tconst prev = (text.__t ??= text.nodeValue);\n\n\tif (prev !== value) {\n\t\t// @ts-expect-error\n\t\ttext.nodeValue = text.__t = value;\n\t}\n}\n\n/**\n * @param {Comment} anchor\n * @param {void | ((anchor: Comment, slot_props: Record<string, unknown>) => void)} slot_fn\n * @param {Record<string, unknown>} slot_props\n * @param {null | ((anchor: Comment) => void)} fallback_fn\n */\nexport function slot(anchor, slot_fn, slot_props, fallback_fn) {\n\tif (slot_fn === undefined) {\n\t\tif (fallback_fn !== null) {\n\t\t\tfallback_fn(anchor);\n\t\t}\n\t} else {\n\t\tslot_fn(anchor, slot_props);\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {import('../../index.js').ComponentType<import('../../index.js').SvelteComponent<Props>> | import('../../index.js').Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tanchor?: Node;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}: {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tanchor?: Node;\n * \t\tevents?: Record<string, (e: any) => any>;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\tif (DEV) {\n\t\tvalidate_component(component);\n\t}\n\n\tconst anchor = options.anchor ?? options.target.appendChild(empty());\n\t// Don't flush previous effects to ensure order of outer effects stays consistent\n\treturn flush_sync(() => _mount(component, { ...options, anchor }), false);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {import('../../index.js').ComponentType<import('../../index.js').SvelteComponent<Props>> | import('../../index.js').Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tif (DEV) {\n\t\tvalidate_component(component);\n\t}\n\n\tconst target = options.target;\n\tconst previous_hydrate_nodes = hydrate_nodes;\n\n\ttry {\n\t\t// Don't flush previous effects to ensure order of outer effects stays consistent\n\t\treturn flush_sync(() => {\n\t\t\tset_hydrating(true);\n\n\t\t\tvar node = target.firstChild;\n\t\t\twhile (\n\t\t\t\tnode &&\n\t\t\t\t(node.nodeType !== 8 || /** @type {Comment} */ (node).data !== HYDRATION_START)\n\t\t\t) {\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\n\t\t\tif (!node) {\n\t\t\t\tthrow HYDRATION_ERROR;\n\t\t\t}\n\n\t\t\tconst anchor = hydrate_anchor(node);\n\t\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\t\t// flush_sync will run this callback and then synchronously run any pending effects,\n\t\t\t// which don't belong to the hydration phase anymore - therefore reset it here\n\t\t\tset_hydrating(false);\n\n\t\t\treturn instance;\n\t\t}, false);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(!!previous_hydrate_nodes);\n\t\tset_hydrate_nodes(previous_hydrate_nodes);\n\t\treset_head_anchor();\n\t}\n}\n\n/**\n * @template {Record<string, any>} Exports\n * @param {import('../../index.js').ComponentType<import('../../index.js').SvelteComponent<any>> | import('../../index.js').Component<any>} Component\n * @param {{\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tanchor: Node;\n * \t\tprops?: any;\n * \t\tevents?: any;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = false }) {\n\tinit_operations();\n\n\tconst registered_events = new Set();\n\n\tconst bound_event_listener = handle_event_propagation.bind(null, target);\n\tconst bound_document_event_listener = handle_event_propagation.bind(null, document);\n\n\t/** @param {Array<string>} events */\n\tconst event_handle = (events) => {\n\t\tfor (let i = 0; i < events.length; i++) {\n\t\t\tconst event_name = events[i];\n\t\t\tif (!registered_events.has(event_name)) {\n\t\t\t\tregistered_events.add(event_name);\n\t\t\t\t// Add the event listener to both the container and the document.\n\t\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t\t// the outer content stops propagation of the event.\n\t\t\t\ttarget.addEventListener(\n\t\t\t\t\tevent_name,\n\t\t\t\t\tbound_event_listener,\n\t\t\t\t\tPassiveDelegatedEvents.includes(event_name)\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tpassive: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(\n\t\t\t\t\tevent_name,\n\t\t\t\t\tbound_document_event_listener,\n\t\t\t\t\tPassiveDelegatedEvents.includes(event_name)\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tpassive: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tlet component = undefined;\n\n\tconst unmount = effect_root(() => {\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {import('#client').ComponentContext} */ (current_component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (const event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, bound_event_listener);\n\t\t\t\tdocument.removeEventListener(event_name, bound_event_listener);\n\t\t\t}\n\t\t\troot_event_handles.delete(event_handle);\n\t\t\tmounted_components.delete(component);\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n * @param {Record<string, any>} component\n */\nexport function unmount(component) {\n\tconst fn = mounted_components.get(component);\n\tif (DEV && !fn) {\n\t\tw.lifecycle_double_unmount();\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.trace('stack trace');\n\t}\n\tfn?.();\n}\n\n/**\n * @param {Record<string, any>} props\n * @returns {Record<string, any>}\n */\nexport function sanitize_slots(props) {\n\tconst sanitized = { ...props.$$slots };\n\tif (props.children) sanitized.default = props.children;\n\treturn sanitized;\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n */\nexport async function append_styles(target, style_sheet_id, styles) {\n\t// Wait a tick so that the template is added to the dom, else getRootNode() will yield wrong results\n\t// If it turns out that this results in noticeable flickering, we need to do something like doing the\n\t// append outside and adding code in mount that appends all stylesheets (similar to how we do it with event delegation)\n\tawait Promise.resolve();\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = create_element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tconst target = /** @type {Document} */ (append_styles_to).head || append_styles_to;\n\t\ttarget.appendChild(style);\n\t}\n}\n\n/**\n * @param {Node} node\n */\nfunction get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn /** @type {Document} */ (node.ownerDocument);\n}\n", "import { proxy } from '../internal/client/proxy.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport { define_property } from '../internal/client/utils.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {import('svelte').ComponentConstructorOptions<Props> & {\n * \tcomponent: import('svelte').ComponentType<import('svelte').SvelteComponent<Props, Events, Slots>> | import('svelte').Component<Props>;\n * \timmutable?: boolean;\n * \thydrate?: boolean;\n * \trecover?: boolean;\n * }} options\n * @returns {import('svelte').SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {import('svelte').SvelteComponent<Props, Events, Slots> | import('svelte').Component<Props>} component\n * @returns {import('svelte').ComponentType<import('svelte').SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {import('svelte').ComponentConstructorOptions & {\n\t *  component: any;\n\t * \timmutable?: boolean;\n\t * \thydrate?: boolean;\n\t * \trecover?: false;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\t// Using proxy state here isn't completely mirroring the Svelte 4 behavior, because mutations to a property\n\t\t// cause fine-grained updates to only the places where that property is used, and not the entire property.\n\t\t// Reactive statements and actions (the things where this matters) are handling this properly regardless, so it should be fine in practise.\n\t\tconst props = proxy({ ...(options.props || {}), $$events: {} }, false);\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(fn);\n}\n"],
  "mappings": "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",
  "names": ["child", "event", "event", "events", "unmount", "target", "event"]
}
