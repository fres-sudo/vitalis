import {
  get,
  is_array,
  set,
  source
} from "./chunk-LHNPR6KV.js";

// node_modules/.pnpm/svelte@5.0.0-next.164/node_modules/svelte/src/internal/client/dom/legacy/misc.js
function reactive_import(fn) {
  var s = source(0);
  return function() {
    if (arguments.length === 1) {
      set(s, get(s) + 1);
      return arguments[0];
    } else {
      get(s);
      return fn();
    }
  };
}
function bubble_event($$props, event) {
  var _a;
  var events = (
    /** @type {Record<string, Function[] | Function>} */
    (_a = $$props.$$events) == null ? void 0 : _a[event.type]
  );
  var callbacks = is_array(events) ? events.slice() : events == null ? [] : [events];
  for (var fn of callbacks) {
    fn.call(this, event);
  }
}
function add_legacy_event_listener($$props, event_name, event_callback) {
  var _a;
  $$props.$$events || ($$props.$$events = {});
  (_a = $$props.$$events)[event_name] || (_a[event_name] = []);
  $$props.$$events[event_name].push(event_callback);
}
function update_legacy_props($$new_props) {
  for (var key in $$new_props) {
    if (key in this) {
      this[key] = $$new_props[key];
    }
  }
}
function default_slot($$props) {
  var _a;
  var children = (_a = $$props.$$slots) == null ? void 0 : _a.default;
  if (children === true) {
    return $$props.children;
  } else {
    return children;
  }
}

export {
  reactive_import,
  bubble_event,
  add_legacy_event_listener,
  update_legacy_props,
  default_slot
};
//# sourceMappingURL=chunk-KX2HYWOZ.js.map
