import type { GenericRoot } from "../generic.js";
import type { RootModule, SchemaModule } from "../module.js";
import { type RootScope } from "../scope.js";
import { type tsKeywordExports } from "./tsKeywords.js";
import { type jsObjectExports } from "./jsObjects.js";
import { type parsingExports } from "./parsing.js";
import { type validationExports } from "./validation.js";
type TsGenericsExports<$ = Ark> = {
    Record: GenericRoot<[
        "K",
        "V"
    ], {
        "[K]": "V";
    }, $>;
};
export declare const ambientRootScope: RootScope<Ark>;
export declare const keywordNodes: SchemaModule<Ark>;
export interface Ark extends tsKeywordExports, jsObjectExports, validationExports, TsGenericsExports {
    parse: RootModule<parsingExports>;
}
export {};
