import { arkKind } from "@arktype/schema";
import { Callable } from "@arktype/util";
export class Generic extends Callable {
    params;
    def;
    $;
    [arkKind] = "generic";
    constructor(params, def, 
    // TODO: should be Scope<$>, but breaks inference
    $) {
        super((...args) => {
            // const argNodes = flatMorph(params, (i, param: string) => [
            // 	param,
            // 	$.parseRoot(args[i])
            // ])
            // { args: argNodes }
            args;
            return $.parseRoot(def);
        });
        this.params = params;
        this.def = def;
        this.$ = $;
    }
}
